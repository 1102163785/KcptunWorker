<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>